import { FastifyPluginCallback } from "fastify";
import * as kubernetes from "@kubernetes/client-node";

declare namespace fastifyKubernetes {
  interface FastifyKubernetesOptions {
    /**
     * Kubeconfig loading mode:
     * - `"auto"`: Choose the first available config mode in this order: `"file"`, `"yaml"`, `"in-cluster"`, and `"default"`.
     * - `"default"`: Load config file the default OS location.
     * - `"file"`: Load config file from `file` option.
     * - `"in-cluster"`: Load in-cluster kubeconfig file.
     * - `"yaml"`: Load config from `yaml` option.
     * - `KubeConfig`: Load custom `KubeConfig` instance.
     *
     * @default "auto"
     */
    kubeconfig?:
      | "auto"
      | "default"
      | "file"
      | "in-cluster"
      | "yaml"
      | kubernetes.KubeConfig;
    /**
     * Kubeconfig file path.
     */
    file?: string;
    /**
     * Kubeconfig YAML string (or buffer) content.
     */
    yaml?: string | Buffer;
    /**
     * Wanted context. If the context does not exist, an error will be thrown.
     */
    context?: string;
    /**
     * Wanted cluster. If the cluster does not exist, an error will be thrown.
     */
    cluster?: string;
    /**
     * Wanted user. If the user does not exist, an error will be thrown.
     */
    user?: string;
    /**
     * Wanted namespace.
     *
     * @default "default"
     */
    namespace?: string;
    /**
     * Nested (Fastify) decorator name.
     */
    name?: string;
  }
  interface FastifyKubernetesObject {
    /**
     * Kubernetes config instance
     */
    config: kubernetes.KubeConfig;
    /**
     * Current context
     */
    context: string;
    /**
     * Current cluster
     */
    cluster: string;
    /**
     * Current user
     */
    user: string;
    /**
     * Current namespace
     */
    namespace: string;
    /**
     * Client instances collection
     */
    api: {
            AdmissionregistrationApi: kubernetes.AdmissionregistrationApi;
      AdmissionregistrationV1Api: kubernetes.AdmissionregistrationV1Api;
      ApiextensionsApi: kubernetes.ApiextensionsApi;
      ApiextensionsV1Api: kubernetes.ApiextensionsV1Api;
      ApiregistrationApi: kubernetes.ApiregistrationApi;
      ApiregistrationV1Api: kubernetes.ApiregistrationV1Api;
      ApisApi: kubernetes.ApisApi;
      AppsApi: kubernetes.AppsApi;
      AppsV1Api: kubernetes.AppsV1Api;
      AuthenticationApi: kubernetes.AuthenticationApi;
      AuthenticationV1Api: kubernetes.AuthenticationV1Api;
      AuthorizationApi: kubernetes.AuthorizationApi;
      AuthorizationV1Api: kubernetes.AuthorizationV1Api;
      AutoscalingApi: kubernetes.AutoscalingApi;
      AutoscalingV1Api: kubernetes.AutoscalingV1Api;
      AutoscalingV2beta1Api: kubernetes.AutoscalingV2beta1Api;
      AutoscalingV2beta2Api: kubernetes.AutoscalingV2beta2Api;
      BatchApi: kubernetes.BatchApi;
      BatchV1Api: kubernetes.BatchV1Api;
      BatchV1beta1Api: kubernetes.BatchV1beta1Api;
      CertificatesApi: kubernetes.CertificatesApi;
      CertificatesV1Api: kubernetes.CertificatesV1Api;
      CoordinationApi: kubernetes.CoordinationApi;
      CoordinationV1Api: kubernetes.CoordinationV1Api;
      CoreApi: kubernetes.CoreApi;
      CoreV1Api: kubernetes.CoreV1Api;
      CustomObjectsApi: kubernetes.CustomObjectsApi;
      DiscoveryApi: kubernetes.DiscoveryApi;
      DiscoveryV1Api: kubernetes.DiscoveryV1Api;
      DiscoveryV1beta1Api: kubernetes.DiscoveryV1beta1Api;
      EventsApi: kubernetes.EventsApi;
      EventsV1Api: kubernetes.EventsV1Api;
      EventsV1beta1Api: kubernetes.EventsV1beta1Api;
      FlowcontrolApiserverApi: kubernetes.FlowcontrolApiserverApi;
      FlowcontrolApiserverV1beta1Api: kubernetes.FlowcontrolApiserverV1beta1Api;
      InternalApiserverApi: kubernetes.InternalApiserverApi;
      InternalApiserverV1alpha1Api: kubernetes.InternalApiserverV1alpha1Api;
      LogsApi: kubernetes.LogsApi;
      NetworkingApi: kubernetes.NetworkingApi;
      NetworkingV1Api: kubernetes.NetworkingV1Api;
      NodeApi: kubernetes.NodeApi;
      NodeV1Api: kubernetes.NodeV1Api;
      NodeV1alpha1Api: kubernetes.NodeV1alpha1Api;
      NodeV1beta1Api: kubernetes.NodeV1beta1Api;
      OpenidApi: kubernetes.OpenidApi;
      PolicyApi: kubernetes.PolicyApi;
      PolicyV1Api: kubernetes.PolicyV1Api;
      PolicyV1beta1Api: kubernetes.PolicyV1beta1Api;
      RbacAuthorizationApi: kubernetes.RbacAuthorizationApi;
      RbacAuthorizationV1Api: kubernetes.RbacAuthorizationV1Api;
      RbacAuthorizationV1alpha1Api: kubernetes.RbacAuthorizationV1alpha1Api;
      SchedulingApi: kubernetes.SchedulingApi;
      SchedulingV1Api: kubernetes.SchedulingV1Api;
      SchedulingV1alpha1Api: kubernetes.SchedulingV1alpha1Api;
      StorageApi: kubernetes.StorageApi;
      StorageV1Api: kubernetes.StorageV1Api;
      StorageV1alpha1Api: kubernetes.StorageV1alpha1Api;
      StorageV1beta1Api: kubernetes.StorageV1beta1Api;
      VersionApi: kubernetes.VersionApi;
      WellKnownApi: kubernetes.WellKnownApi;
      KubernetesObjectApi: kubernetes.KubernetesObjectApi;

      [key: string]: any;
    };
  }
}

declare module "fastify" {
  interface FastifyInstance {
    kubernetes: fastifyKubernetes.FastifyKubernetesObject & {
      [name: string]: fastifyKubernetes.FastifyKubernetesObject;
    };
  }
}

declare let fastifyKubernetes: FastifyPluginCallback<fastifyKubernetes.FastifyKubernetesOptions>;

export = fastifyKubernetes;
