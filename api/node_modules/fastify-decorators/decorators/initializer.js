import { INITIALIZER } from '../symbols/index.js';
import { Deferred } from '../utils/deferred.js';
export const readyMap = new Map();
/**
 * Used to mark a Service method to be called after all the Services are created, but before the server starts
 *
 * @param dependencies The dependencies that need to be initialized before this one will be
 */
export function Initializer(dependencies = []) {
    return (targetPrototype, propertyKey) => {
        const target = targetPrototype.constructor;
        const ready = new Deferred();
        target[INITIALIZER] = (self) => {
            Promise.all(dependencies.map((dep) => readyMap.get(dep)))
                .then(() => self[propertyKey]())
                .then(ready.resolve)
                .catch(ready.reject);
        };
        readyMap.set(target, ready.promise);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdGlhbGl6ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvZGVjb3JhdG9ycy9pbml0aWFsaXplci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRWhELE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxJQUFJLEdBQUcsRUFBMEIsQ0FBQztBQUUxRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLFdBQVcsQ0FBQyxlQUEwQixFQUFFO0lBQ3RELE9BQU8sQ0FBQyxlQUFvQixFQUFFLFdBQTRCLEVBQUUsRUFBRTtRQUM1RCxNQUFNLE1BQU0sR0FBRyxlQUFlLENBQUMsV0FBVyxDQUFDO1FBQzNDLE1BQU0sS0FBSyxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7UUFFN0IsTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBNEMsRUFBRSxFQUFFO1lBQ3JFLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2lCQUN0RCxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQXFCLENBQUMsRUFBRSxDQUFDO2lCQUN6QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztpQkFDbkIsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QixDQUFDLENBQUM7UUFFRixRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOSVRJQUxJWkVSIH0gZnJvbSAnLi4vc3ltYm9scy9pbmRleC5qcyc7XG5pbXBvcnQgeyBEZWZlcnJlZCB9IGZyb20gJy4uL3V0aWxzL2RlZmVycmVkLmpzJztcblxuZXhwb3J0IGNvbnN0IHJlYWR5TWFwID0gbmV3IE1hcDx1bmtub3duLCBQcm9taXNlPHZvaWQ+PigpO1xuXG4vKipcbiAqIFVzZWQgdG8gbWFyayBhIFNlcnZpY2UgbWV0aG9kIHRvIGJlIGNhbGxlZCBhZnRlciBhbGwgdGhlIFNlcnZpY2VzIGFyZSBjcmVhdGVkLCBidXQgYmVmb3JlIHRoZSBzZXJ2ZXIgc3RhcnRzXG4gKlxuICogQHBhcmFtIGRlcGVuZGVuY2llcyBUaGUgZGVwZW5kZW5jaWVzIHRoYXQgbmVlZCB0byBiZSBpbml0aWFsaXplZCBiZWZvcmUgdGhpcyBvbmUgd2lsbCBiZVxuICovXG5leHBvcnQgZnVuY3Rpb24gSW5pdGlhbGl6ZXIoZGVwZW5kZW5jaWVzOiB1bmtub3duW10gPSBbXSk6IFByb3BlcnR5RGVjb3JhdG9yIHtcbiAgcmV0dXJuICh0YXJnZXRQcm90b3R5cGU6IGFueSwgcHJvcGVydHlLZXk6IHN0cmluZyB8IHN5bWJvbCkgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHRhcmdldFByb3RvdHlwZS5jb25zdHJ1Y3RvcjtcbiAgICBjb25zdCByZWFkeSA9IG5ldyBEZWZlcnJlZCgpO1xuXG4gICAgdGFyZ2V0W0lOSVRJQUxJWkVSXSA9IChzZWxmOiBSZWNvcmQ8dHlwZW9mIHByb3BlcnR5S2V5LCAoKSA9PiB2b2lkPikgPT4ge1xuICAgICAgUHJvbWlzZS5hbGwoZGVwZW5kZW5jaWVzLm1hcCgoZGVwKSA9PiByZWFkeU1hcC5nZXQoZGVwKSkpXG4gICAgICAgIC50aGVuKCgpID0+IHNlbGZbcHJvcGVydHlLZXkgYXMgc3RyaW5nXSgpKVxuICAgICAgICAudGhlbihyZWFkeS5yZXNvbHZlKVxuICAgICAgICAuY2F0Y2gocmVhZHkucmVqZWN0KTtcbiAgICB9O1xuXG4gICAgcmVhZHlNYXAuc2V0KHRhcmdldCwgcmVhZHkucHJvbWlzZSk7XG4gIH07XG59XG4iXX0=