/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
import { _injectablesHolder } from '../registry/_injectables-holder.js';
import { destructors } from '../registry/destructors.js';
import { CREATOR, DESTRUCTOR, INITIALIZER } from '../symbols/index.js';
const INITIALIZED = Symbol.for('fastify-decorators.initializer-called');
export function Service(injectableToken) {
    return (target) => {
        target[CREATOR] = {
            register(classLoader) {
                var _a;
                const instance = classLoader(target);
                if (instance[INITIALIZED])
                    return instance;
                instance[INITIALIZED] = Promise.resolve((_a = target[INITIALIZER]) === null || _a === void 0 ? void 0 : _a.call(target, instance));
                if (target[DESTRUCTOR])
                    destructors.set(target, target[DESTRUCTOR]);
                return instance;
            },
        };
        _injectablesHolder.injectService(target, target, false);
        if (injectableToken)
            _injectablesHolder.injectService(injectableToken, target, false);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9kZWNvcmF0b3JzL3NlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBSUgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZFLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQztBQU94RSxNQUFNLFVBQVUsT0FBTyxDQUFDLGVBQWlDO0lBQ3ZELE9BQU8sQ0FBQyxNQUF5QixFQUFFLEVBQUU7UUFDbkMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHO1lBQ2hCLFFBQVEsQ0FBTyxXQUF3Qjs7Z0JBQ3JDLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBOEMsTUFBTSxDQUFDLENBQUM7Z0JBQ2xGLElBQUksUUFBUSxDQUFDLFdBQVcsQ0FBQztvQkFBRSxPQUFPLFFBQWdCLENBQUM7Z0JBRW5ELFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQUEsTUFBTSxDQUFDLFdBQVcsQ0FBQywrQ0FBbkIsTUFBTSxFQUFnQixRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUN6RSxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUM7b0JBQUUsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBRXBFLE9BQU8sUUFBZ0IsQ0FBQztZQUMxQixDQUFDO1NBQ0YsQ0FBQztRQUVGLGtCQUFrQixDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3hELElBQUksZUFBZTtZQUFFLGtCQUFrQixDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hGLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQW5kcmV5IENoYWxraW4gPEwyakxpZ2FAZ21haWwuY29tPiAoaHR0cHM6Ly9naXRodWIuY29tL0wyakxpZ2EpLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9MMmpMaWdhL2Zhc3RpZnktZGVjb3JhdG9ycy9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ2xhc3NMb2FkZXIgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2Jvb3RzdHJhcC1jb25maWcuanMnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZVNlcnZpY2UgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2luamVjdGFibGUtY2xhc3MuanMnO1xuaW1wb3J0IHsgX2luamVjdGFibGVzSG9sZGVyIH0gZnJvbSAnLi4vcmVnaXN0cnkvX2luamVjdGFibGVzLWhvbGRlci5qcyc7XG5pbXBvcnQgeyBkZXN0cnVjdG9ycyB9IGZyb20gJy4uL3JlZ2lzdHJ5L2Rlc3RydWN0b3JzLmpzJztcbmltcG9ydCB7IENSRUFUT1IsIERFU1RSVUNUT1IsIElOSVRJQUxJWkVSIH0gZnJvbSAnLi4vc3ltYm9scy9pbmRleC5qcyc7XG5cbmNvbnN0IElOSVRJQUxJWkVEID0gU3ltYm9sLmZvcignZmFzdGlmeS1kZWNvcmF0b3JzLmluaXRpYWxpemVyLWNhbGxlZCcpO1xuXG4vKipcbiAqIERlY29yYXRvciBmb3IgbWFraW5nIGNsYXNzZXMgaW5qZWN0YWJsZVxuICovXG5leHBvcnQgZnVuY3Rpb24gU2VydmljZSgpOiBDbGFzc0RlY29yYXRvcjtcbmV4cG9ydCBmdW5jdGlvbiBTZXJ2aWNlKGluamVjdGFibGVUb2tlbjogc3RyaW5nIHwgc3ltYm9sKTogQ2xhc3NEZWNvcmF0b3I7XG5leHBvcnQgZnVuY3Rpb24gU2VydmljZShpbmplY3RhYmxlVG9rZW4/OiBzdHJpbmcgfCBzeW1ib2wpOiB1bmtub3duIHtcbiAgcmV0dXJuICh0YXJnZXQ6IEluamVjdGFibGVTZXJ2aWNlKSA9PiB7XG4gICAgdGFyZ2V0W0NSRUFUT1JdID0ge1xuICAgICAgcmVnaXN0ZXI8VHlwZT4oY2xhc3NMb2FkZXI6IENsYXNzTG9hZGVyKTogVHlwZSB7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gY2xhc3NMb2FkZXI8VHlwZSAmIHsgW0lOSVRJQUxJWkVEXT86IFByb21pc2U8dW5rbm93bj4gfT4odGFyZ2V0KTtcbiAgICAgICAgaWYgKGluc3RhbmNlW0lOSVRJQUxJWkVEXSkgcmV0dXJuIGluc3RhbmNlIGFzIFR5cGU7XG5cbiAgICAgICAgaW5zdGFuY2VbSU5JVElBTElaRURdID0gUHJvbWlzZS5yZXNvbHZlKHRhcmdldFtJTklUSUFMSVpFUl0/LihpbnN0YW5jZSkpO1xuICAgICAgICBpZiAodGFyZ2V0W0RFU1RSVUNUT1JdKSBkZXN0cnVjdG9ycy5zZXQodGFyZ2V0LCB0YXJnZXRbREVTVFJVQ1RPUl0pO1xuXG4gICAgICAgIHJldHVybiBpbnN0YW5jZSBhcyBUeXBlO1xuICAgICAgfSxcbiAgICB9O1xuXG4gICAgX2luamVjdGFibGVzSG9sZGVyLmluamVjdFNlcnZpY2UodGFyZ2V0LCB0YXJnZXQsIGZhbHNlKTtcbiAgICBpZiAoaW5qZWN0YWJsZVRva2VuKSBfaW5qZWN0YWJsZXNIb2xkZXIuaW5qZWN0U2VydmljZShpbmplY3RhYmxlVG9rZW4sIHRhcmdldCwgZmFsc2UpO1xuICB9O1xufVxuIl19